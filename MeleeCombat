using JetBrains.Annotations;
using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.UI;

public class MeleeCombat : MonoBehaviour
{
    private float Timebtwattack;
    public float Starttimeattack;

    public Transform Attackpos;
    public LayerMask WhatisEnemies;
    public float AttackRange;
    public int Damage;
    public int Health;
    public int combo = 0;
    public float knockbackforce;
    Rigidbody2D rb2d;
    public bool isFacingRight;
    private float positive;
    private float negative;
    public Text textbox;

    void Start()
    {
        positive = knockbackforce;
        negative = -knockbackforce;
  
    }
    void Update()
    {
        textbox.text = "" + Health;

        isFacingRight = GameObject.FindWithTag("Player").GetComponent<PlayerMovement>().isFacingRight;
        if (Timebtwattack <= 0)
        {
            if (Input.GetMouseButtonDown(0))
            {
                CancelInvoke();
                Collider2D[] enemiesToDamage = Physics2D.OverlapCircleAll(Attackpos.position, AttackRange, WhatisEnemies);
                for (int i = 0; i < enemiesToDamage.Length; i++)
                {
                    enemiesToDamage[i].GetComponent<Enemy>().TakeDamage(Damage);
                    rb2d = enemiesToDamage[i].gameObject.GetComponent<Rigidbody2D>();
                    if (combo == 2)
                    {
                        if (!isFacingRight)
                        {
                            knockbackforce = negative;
                        }
                        else
                        {
                            knockbackforce = positive;
                        }
                        rb2d.AddForce(new Vector2(knockbackforce, 0));


                    }
                    if (combo == 3)
                    {

                        combo = 0;
                    }
                    combo += 1;



                }
                Invoke("resetCombo", 1);
                Timebtwattack = Starttimeattack;
            }
        }
        else
        {
            Timebtwattack -= Time.deltaTime;
        }
        
    }
    public void TakeDamage(int damage)
    {
        Health -= damage;
        Debug.Log("PlayerHit");
    }

    void resetCombo()
    {
        Debug.Log("reset timer");
        combo = 0;
    }
}
